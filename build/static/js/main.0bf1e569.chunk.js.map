{"version":3,"sources":["firebase.js","components/SendMessage.js","components/SignOut.js","components/Chat.js","components/SignIn.js","App.js","index.js"],"names":["db","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","firestore","auth","SendMessage","scroll","useState","msg","setMsg","showPicker","setShowPicker","e","a","preventDefault","uid","currentUser","collection","add","text","createdAt","FieldValue","serverTimestamp","current","scrollIntoView","behavior","onSubmit","className","Input","style","width","fontSize","fontWeight","marginLeft","marginBottom","placeholder","type","value","onChange","target","src","alt","onClick","val","pickerStyle","onEmojiClick","event","emojiObject","prevInput","emoji","length","trim","Button","margin","maxWidth","SignOut","display","justifyContent","position","backgroundColor","top","borderBottom","zIndex","padding","borderRadius","signOut","Chat","useRef","messages","setMessages","useEffect","orderBy","limit","onSnapshot","snapshot","docs","map","doc","data","id","ref","SignIn","provider","GoogleAuthProvider","signInWithPopup","App","useAuthState","user","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.0bf1e569.chunk.js","sourcesContent":["import firebase from 'firebase'\nconst firebaseApp = firebase.initializeApp({\n  apiKey: \"AIzaSyBGyZLjuEzEGlkpoYIyJyPbrtY4DHzR4T8\",\n  authDomain: \"appiness-chatapp.firebaseapp.com\",\n  projectId: \"appiness-chatapp\",\n  storageBucket: \"appiness-chatapp.appspot.com\",\n  messagingSenderId: \"848102130974\",\n  appId: \"1:848102130974:web:748806d562d5040710f50f\",\n  measurementId: \"G-ZRW1KS3K4F\"\n})\nconst db = firebaseApp.firestore()\nconst auth = firebase.auth()\nexport { db, auth }","import React, { useState } from 'react'\nimport { db, auth } from '../firebase'\nimport firebase from 'firebase'\nimport { Input, Button } from '@material-ui/core'\nimport Picker from \"emoji-picker-react\";\nfunction SendMessage({ scroll }) {\n    const [msg, setMsg] = useState(\"\")\n    const [showPicker, setShowPicker] = useState(false);\n    const onEmojiClick = (event, emojiObject) => {\n        setMsg(prevInput => prevInput + emojiObject.emoji);\n        setShowPicker(true);\n      };\n    async function sendMessage(e) {\n        e.preventDefault()\n        const { uid } = auth.currentUser\n\n        await db.collection('messages').add({\n            text: msg,\n            uid,\n            createdAt: firebase.firestore.FieldValue.serverTimestamp()\n        })\n        setMsg('')\n        scroll.current.scrollIntoView({ behavior: 'smooth' })\n    }\n    return (\n        <div>\n            <form onSubmit={sendMessage}>\n                <div className=\"sendMsg\">\n                    <Input style={{ width: '78%', fontSize: '15px', fontWeight: '550', marginLeft: '5px', marginBottom: '-3px' }} \n                    placeholder='Message...' type=\"text\" \n                    value={msg} \n                    onChange={e => setMsg(e.target.value)} />\n                    <img className=\"emoji-icon\" \n                    src=\"https://icons.getbootstrap.com/assets/icons/emoji-smile.svg\"\n                    alt='xoxo'\n                     onClick={() => setShowPicker(val => !val)} />\n                    {showPicker && <Picker pickerStyle={{ width: '100%' }} \n                    onEmojiClick={onEmojiClick} />}\n                    \n                    {msg.length>0 && msg.trim().length>0? <Button \n                    style={{ width: '18%', fontSize: '15px', fontWeight: '550', margin: '4px 5% -13px 5%', maxWidth: '200px'}}\n                     type=\"submit\">Send</Button>: false}\n                    {/* {msg.length>=1 && <Button \n                    style={{ width: '18%', fontSize: '15px', fontWeight: '550', margin: '4px 5% -13px 5%', maxWidth: '200px'}}\n                     type=\"submit\">Send</Button> } */}\n                    \n                </div>\n            </form>\n        </div>\n    )\n}\nexport default SendMessage","import React from 'react'\nimport { auth } from '../firebase.js'\nimport { Button } from '@material-ui/core'\n\nfunction SignOut() {\n    return (\n        <div style={{\n            display: 'flex', justifyContent: 'center', position: 'fixed', width: '100%', backgroundColor: '#FAFAFA', top: 0, borderBottom: 'solid 1px lightgray', zIndex: '10'\n        }}>\n            <Button style={{ padding: '20px', fontSize: '15px', borderRadius: '0', fontWeight: '600' }} onClick={() => auth.signOut()}>Sign Out</Button>\n        </div>\n    )\n}\n\nexport default SignOut\n","import React, { useState, useEffect, useRef } from 'react'\nimport { db, auth } from '../firebase'\nimport SendMessage from './SendMessage'\nimport SignOut from './SignOut'\n\nfunction Chat() {\n    const scroll = useRef()\n    const [messages, setMessages] = useState([])\n    useEffect(() => {\n        db.collection('messages').orderBy('createdAt').limit(50).onSnapshot(snapshot => {\n            setMessages(snapshot.docs.map(doc => doc.data()))\n        })\n    }, [])\n    return (\n        <div>\n            <SignOut />\n            <div className=\"msgs\">\n                {messages.map(({ id, text, uid }) => (\n                    <div>\n                        <div key={id} className={`msg ${uid === auth.currentUser.uid ? 'sent' : 'received'}`}>\n                            <p>{text}</p>\n                        </div>\n                    </div>\n                ))}\n            </div>\n            <SendMessage scroll={scroll} />\n            <div ref={scroll}></div>\n        </div>\n    )\n}\n\nexport default Chat\n","import React from 'react'\nimport firebase from 'firebase'\nimport { auth } from '../firebase.js'\nimport { Button } from '@material-ui/core'\n\nfunction SignIn() {\n    function signInWithGoogle() {\n        const provider = new firebase.auth.GoogleAuthProvider()\n        auth.signInWithPopup(provider)\n    }\n    return (\n        <div>\n            <h2>Appiness Messenger</h2>\n            <Button onClick={signInWithGoogle}>Sign In with Google</Button>\n            </div>\n    )\n}\n\nexport default SignIn\n\n","import './App.css';\nimport Chat from './components/Chat';\nimport SignIn from './components/SignIn';\nimport { auth } from './firebase.js'\nimport { useAuthState } from 'react-firebase-hooks/auth'\n\nfunction App() {\n  const [user] = useAuthState(auth)\n  return (\n    <>\n      {user ? <Chat /> : <SignIn />}\n    </>\n  );\n}\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}